// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  address   String?
  role      Role
  products  Product[]
  bids      Bid[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  BUYER
  SELLER
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  quantity    Int
  price       Float
  seller      User     @relation(fields: [sellerId], references: [id])
  sellerId    String
  bids        Bid[]
  auction     Auction?
  createdAt   DateTime @default(now())
}

model Auction {
  id          String   @id @default(uuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String   @unique
  startTime   DateTime
  endTime     DateTime
  status      AuctionStatus
  bids        Bid[]
}

enum AuctionStatus {
  ONGOING
  COMPLETED
  CANCELLED
}

model Bid {
  id          String   @id @default(uuid())
  amount      Float
  buyer       User     @relation(fields: [buyerId], references: [id])
  buyerId     String
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  auction     Auction? @relation(fields: [auctionId], references: [id])
  auctionId   String?
  status      BidStatus
  createdAt   DateTime @default(now())
}

enum BidStatus {
  PENDING
  ACCEPTED
  REJECTED
}